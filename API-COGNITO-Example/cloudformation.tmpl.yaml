AWSTemplateFormatVersion: 2010-09-09

Resources:
    Function:
        Type: AWS::Lambda::Function
        Properties:
            Runtime: python2.7
            Handler: lambda.handler
            Role: {{ .LambdaRole }}
            Code: lambda.zip

    Permission:
        Type: AWS::Lambda::Permission
        Properties:
            Action: lambda:InvokeFunction
            FunctionName: !GetAtt Function.Arn
            Principal: apigateway.amazonaws.com

    Api:
        Type: AWS::ApiGateway::RestApi
        Properties:
            Body:
                swagger: '2.0'
                info:
                    title: {{ .ApiTitle }}
                    version: latest
                securityDefinitions:
                    {{ .UserPoolName }}:
                        type: apiKey
                        name: Authorization
                        in: header
                        x-amazon-apigateway-authtype: cognito_user_pools
                        x-amazon-apigateway-authorizer:
                            providerARNs:
                                - !GetAtt UserPool.Arn
                            type: cognito_user_pools
                paths:
                    /:
                        x-amazon-apigateway-any-method:
                            security: [{{ .UserPoolName }}: []]
                            x-amazon-apigateway-integration:
                                type: aws_proxy
                                httpMethod: POST
                                uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${Function.Arn}/invocations'

    Deployment:
        Type: AWS::ApiGateway::Deployment
        Properties:
            RestApiId: !Ref Api
            StageName: {{ .StageName }}

    UserPool:
        Type: Custom::COGNITO-UserPool
        Properties:
            ServiceToken: {{ .ServiceTokenUserPool }}
            Properties:
                PoolName: {{ .UserPoolName }}
                Policies:
                    PasswordPolicy:
                        MinimumLength: 10
                        RequireLowercase: false
                        RequireNumbers: false
                        RequireSymbols: false
                        RequireUppercase: false
                AutoVerifiedAttributes: [email]
                AliasAttributes: [email]
                MfaConfiguration: 'OFF'
                UserPoolTags:
                    TagName: TagValue
                AdminCreateUserConfig:
                    AllowAdminCreateUserOnly: false
                    UnusedAccountValidityDays: 7
                Schema:
                    - Name: email
                      AttributeDataType: String
                      DeveloperOnlyAttribute: false
                      Mutable: true
                      Required: true
                      StringAttributeConstraints:
                          MinLength: 5
                          MaxLength: 2048

    UserPoolClient:
        Type: Custom::COGNITO-UserPoolClient
        Properties:
            ServiceToken: {{ .ServiceTokenUserPoolClient }}
            Properties:
                UserPoolId: !Ref UserPool
                ClientName: Client
                GenerateSecret: false
                RefreshTokenValidity: 7
                ReadAttributes:
                    - email
                    - email_verified
                # REMOVE NEXT LINE IN PROD
                ExplicitAuthFlows:
                    - ADMIN_NO_SRP_AUTH

Outputs:
    ApiUrl:
        Value: !Sub 'https://${Api}.execute-api.${AWS::Region}.amazonaws.com/{{ .StageName }}'
        Export:
            Name: API-Test-Custom-Resource-URL
