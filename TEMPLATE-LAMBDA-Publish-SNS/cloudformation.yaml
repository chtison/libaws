AWSTemplateFormatVersion: 2010-09-09

Resources:
    Function:
        Type: AWS::Lambda::Function
        DependsOn: Role
        Properties:
            Runtime: python2.7
            Handler: lambda.handler
            Code: lambda.zip
            Role: !GetAtt Role.Arn
{{- with .Timeout }}
            Timeout: {{ . }}
{{- end }}
            Environment:
                Variables:
                    TOPIC: {{ .Topic }}
{{- range .Environment }}
                    {{ index . 0}}: {{ index . 1 }}
{{- end }}

    Role:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                    Effect: Allow
                    Action: sts:AssumeRole
                    Principal:
                        Service: lambda.amazonaws.com

    LogGroup:
        Type: AWS::Logs::LogGroup
        DependsOn: Function
        Properties:
            LogGroupName: !Sub '/aws/lambda/${Function}'
{{- with .LogGroupRetentionInDays }}
            RetentionInDays: {{ . }}
{{- end }}

    Policy:
        Type: AWS::IAM::Policy
        DependsOn: [Role, LogGroup]
        Properties:
            PolicyName: Default
            Roles: [!Ref Role]
            PolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: Allow
                      Action:
                          - logs:CreateLogStream
                          - logs:PutLogEvents
                      Resource: !GetAtt LogGroup.Arn
                    - Effect: Allow
                      Action:
                          - sns:Publish
                      Resource: {{ .Topic }}

{{- range $i, $e := .Schedules }}

    Event{{$i}}:
        Type: AWS::Events::Rule
        DependsOn: Function
        Properties:
            Targets:
                - Arn: !GetAtt Function.Arn
                  Id: !Ref Function
            ScheduleExpression: '{{$e}}'

    FunctionPermissionForEvent{{$i}}:
        Type: AWS::Lambda::Permission
        DependsOn: [Function, Event{{$i}}]
        Properties:
            Action: lambda:InvokeFunction
            FunctionName: !GetAtt Function.Arn
            Principal: events.amazonaws.com
            SourceArn: !GetAtt Event{{$i}}.Arn
{{- end }}
